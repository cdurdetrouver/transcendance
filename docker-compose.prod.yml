services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    image: ghcr.io/cdurdetrouver/backend:latest
    container_name: backend
    restart: always
    ports:
      - "8000:8000"
    networks:
      - prod-network
    depends_on:
      db:
        condition: service_started
  db:
    container_name: db
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - "5432:5432"
    volumes:
      - ./db:/var/lib/postgresql/data
    networks:
      - prod-network
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    image: ghcr.io/cdurdetrouver/frontend:latest
    container_name: frontend
    restart: always
    ports:
      - "443:443"
    networks:
      - prod-network
    volumes:
      - ./certs/conf:/etc/letsencrypt
      - ./certs/www:/var/www/certbot

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certs/conf:/etc/letsencrypt
      - ./certs/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email gabriel.bazart@gmail.com --agree-tos -d pong.cdurdetrouver.fr --non-interactive
    networks:
      - prod-network

networks:
  prod-network:
    driver: bridge
