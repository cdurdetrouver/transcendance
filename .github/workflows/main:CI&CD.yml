name: CI & CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  backend:
    name: Tests for backend
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10.12
      uses: actions/setup-python@v3
      with:
        python-version: 3.10.12
    - name: Install Dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        cd backend
        python manage.py test --settings=backend.settings.settings
  build:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: [backend]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
      - name: Login to Github Docker Registry
        run: echo ${{ secrets.TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Create SSL Certificate Files
        run: |
          mkdir -p frontend/certs
          echo "${{ secrets.PROD_SSL_CERT }}" > frontend/certs/prod.crt
          echo "${{ secrets.PROD_SSL_KEY }}" > frontend/certs/prod.key
      - name: Build Docker Images
        run: docker compose -f docker-compose.prod.yml build
      - name: Push Docker Images
        run: docker compose -f docker-compose.prod.yml push

  deploy:
    name: Deploy to EC2
    runs-on: self-hosted
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Pull and Deploy
        run: |
          cd /home/ubuntu
          docker compose -f docker-compose.prod.yml -p prod down
          docker pull ghcr.io/cdurdetrouver/backend:latest
          docker pull ghcr.io/cdurdetrouver/frontend:latest
          docker compose -f docker-compose.prod.yml -p prod up -d --remove-orphans
