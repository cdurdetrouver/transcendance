name: CI & CD for dev branch

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  backend:
    name: Tests for backend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
      - name: Run backend tests
        run: |
          docker compose -f docker-compose.yml build
          docker compose -f docker-compose.yml up -d
          docker compose -f docker-compose.yml exec backend python3 manage.py makemigrations
          docker compose -f docker-compose.yml exec backend python3 manage.py migrate
          docker compose -f docker-compose.yml exec backend python3 manage.py test
      - name: Stop containers
        run : docker compose -f docker-compose.yml down

  build:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: [backend]
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'

    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
      - name: Login to Github Docker Registry
        run: echo ${{ secrets.TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Create SSL Certificate Files
        run: |
          mkdir -p frontend/certs
          echo "${{ secrets.DEV_SSL_CERT }}" > frontend/certs/dev.crt
          echo "${{ secrets.DEV_SSL_KEY }}" > frontend/certs/dev.key
      - name: Build Docker Images
        run: docker compose -f docker-compose.dev.yml build
      - name: Push Docker Images
        run: docker compose -f docker-compose.dev.yml push

  deploy:
    name: Deploy to EC2
    runs-on: self-hosted
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'

    steps:
      - name: Pull repository
        run: |
          cd /home/ubuntu/transcendance-dev
          git checkout dev
          git pull
      - name: Add Secrets
        run: |
          cd /home/ubuntu/transcendance-dev
          mkdir -p secrets
          echo "DB_NAME=${{ secrets.DB_NAME }}" > secrets/backend.env
          echo "DB_USER=${{ secrets.DB_USER }}" >> secrets/backend.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> secrets/backend.env
          echo "BACKEND_SECRET_KEY=${{ secrets.BACKEND_SECRET_KEY }}" >> secrets/backend.env
      - name: Pull and Deploy
        run: |
          cd /home/ubuntu/transcendance-dev
          git checkout dev
          docker compose -f docker-compose.dev.yml -p dev down
          docker pull ghcr.io/cdurdetrouver/backend-dev:latest
          docker pull ghcr.io/cdurdetrouver/frontend-dev:latest
          docker compose -f docker-compose.dev.yml -p dev up -d --remove-orphans
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
